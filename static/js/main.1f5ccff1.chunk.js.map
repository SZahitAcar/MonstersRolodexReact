{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/searchBox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BACKL,EAAMI,QAAQE,OAEnB,4BACKN,EAAMI,QAAQG,YCLdC,EAAW,SAACR,GAErB,OACI,qBAAKC,UAAU,WAAf,SACKD,EAAMS,SAASC,KAAI,SAACN,GAAD,OACpB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCPlBM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,8BACI,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,QCkCPG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC1B,GAAD,OACvCA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEY,aAAce,KAAKf,aACnBD,YAAY,mBAEd,cAAC,EAAD,CAAUH,SAAUoB,W,GAjCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1f5ccff1.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./cardStyle.css\"\n\nexport const Card = (props) => (\n    <div className=\"card-container\">\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n        <h2>\n            {props.monster.name}\n        </h2>\n        <p>\n            {props.monster.email}\n        </p>\n    </div>\n)","import React from \"react\"\nimport \"./cardListStyle.css\"\n\nimport {Card} from \"../card/Card\"\n\nexport const CardList = (props) => {\n    \n    return (\n        <div className=\"CardList\">\n            {props.monsters.map((monster) => (\n            <Card key={monster.id} monster={monster}></Card>\n          ))}\n        </div>\n    )\n}","import React from 'react'\nimport \"./searchBoxStyle.css\"\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n    return (\n        <div>\n            <input\n            className=\"search\"\n            type=\"search\"\n            placeholder={placeholder}\n            onChange={handleChange}\n        ></input>\n        </div>\n    )\n}\n\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/CardList\";\nimport { SearchBox } from \"./components/searchBox/SearchBox\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex</h1>\n        <SearchBox\n          handleChange={this.handleChange}\n          placeholder=\"Search Monster\"\n        ></SearchBox>\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}